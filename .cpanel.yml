---
deployment:
  tasks:
    - |
      {
        echo "========Started deployment at $(date)"
        export REPO_PATH=/home/weareinit/repositories/it-conference
        export PROD_PATH=/home/weareinit/conference.weareinittogether.nl
        export ACC_PATH=/home/weareinit/acc.weareinittogether.nl

        env
        
        cd $REPO_PATH
        git fetch origin
        BRANCH="${CPANEL__BRANCH:-$(git symbolic-ref --short HEAD)}"
        echo "Detected branch: $BRANCH"
        
        if [ "$BRANCH" = "release" ]; then
          echo "Deploying release to PRODUCTION"
          git --work-tree=$PROD_PATH --git-dir=$REPO_PATH/.git checkout -f origin/release
          cd $PROD_PATH
          # cp .env.production .env
          # composer install --no-dev --optimize-autoloader
          # php artisan config:cache
          # php artisan route:cache
          # php artisan migrate --force
          echo "Production deployment complete."
        elif [ "$BRANCH" = "acc" ]; then
          echo "Deploying acc to ACCEPTANCE"
          rsync -av --delete --exclude='.git' $REPO_PATH $ACC_PATH
          cd $ACC_PATH
          composer install --no-ansi --no-interaction --no-progress --prefer-dist
          npm install
          npm run build --if-present
          php artisan config:clear
          #php artisan migrate --force
          php artisan storage:link
          echo "Acceptance deployment complete."
        else
          echo "Branch $BRANCH is not configured for deployment."      
        fi
      } >> /home/weareinit/deploy.log 2>&1
